type Query {
    users: [User]
    threads: [Thread]
    posts: [Post]
    tags: [Tag]
    likes: [Like]
}

type Mutation {
    createThread(input: CreateThreadInput!): Thread!
    createPost(input: CreatePostInput!): Post!
    like(input: LikeInput!): Like!
}

type User {
    id: ID!
    username: String!
    email: String!
    threads: [Thread!]!
    posts: [Post!]!
    likes: [Like!]!
}

type Thread {
    id: ID!
    title: String!
    content: String!
    author: User!
    posts: [Post!]!
    tags: [Tag!]!
}

type Post {
    id: ID!
    content: String!
    author: User!
    thread: Thread!
    likes: [Like!]!
}

type Tag {
    id: ID!
    name: String!
    threads: [Thread!]!
}

type Like {
    id: ID!
    user: User!
    post: Post!
}

input CreateThreadInput {
    title: String!
    content: String!
    authorId: ID!
}

input CreatePostInput {
    content: String!
    authorId: ID!
    threadId: ID!
}

input LikeInput {
    postId: ID!
    userId: ID!
}
